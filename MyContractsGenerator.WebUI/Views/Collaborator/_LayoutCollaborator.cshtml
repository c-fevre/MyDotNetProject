@using MyContractsGenerator.Common
@using MyContractsGenerator.WebUI.Models.CollaboratorModels
@model MyContractsGenerator.WebUI.Models.CollaboratorModels.CollaboratorMainModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="contentSideBarSection">
    @RenderBody()
</div>


@section LeftMenuSection {
    @Helpers.LeftMenu(
        menuCss: "collaboratorLeftMenu",
        itemIconCss: x => "glyphicon glyphicon-user",
        items: Model.Collaborators,
        itemIsActive: x => (Model.EditedCollaborator != null) && ((x as CollaboratorModel).Id == Model.EditedCollaborator.Id),
        itemActionUrl: x => Url.Action("Edit", "Collaborator", new { Id = (x as CollaboratorModel).Id }),
        itemDisplay:
        @<div>
            <span class="text-uppercase">@((item as CollaboratorModel).LastName)</span>
            <span class="text-capitalize">@((item as CollaboratorModel).FirstName)</span>
        </div>,
        newItemUrl: Url.Action("Create", "Collaborator"),
        newItemText: @Resources.Administrator_NewAdministrator,
        userCanDeleteItem: (currentUserId, item) => true,
        deleteTooltipText: Resources.Administrator_Tooltip_RemoveUser
        )
}

@section ScriptSection {
    <script>
        $(document).ready(function () {
            var aspnet = {
                messages: {
                    beforeLeave: @Html.Raw(Json.Encode(Resources.Shared_BeforeLeave_Message)),
                    nonSelectedText: @Html.Raw(Json.Encode(Resources.Role_MultiSelect_NonSelectedText))
                }
            };

            $("#EditedCollaborator_LinkedRolesIds")
                .multiselect({
                    numberDisplayed: 100,
                    selectAllNumber: false,
                    buttonText: function(options, select) {
                        if (options.length === 0) return aspnet.messages.nonSelectedText;
                        else return $.map(options, function(x) { return $(x).text() }).join(", ");
                    },
                    onChange: function(option, checked, select) {
                        IsThisPageHasBeModified = true;
                    }
                });
        });

    </script>

    @RenderSection("PageChangeChecker", false)
}